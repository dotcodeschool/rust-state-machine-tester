course_name: "Rust State Machine"
sections:
  - name: "Introduction to the Rust State Machine"
    slug: "1" # This must match `{sectionIndex}`
    lessons:
      - name: "Initialize your Rust Project"
        slug: "1-1" # This must match `{sectionIndex}-{lessonIndex}`
        duration: 3600
        tests:
          - name: "cargo init"
            slug: "cargo-init" # This must be unique for this entire course
            optional: false
            cmd: "./tests/1-1/cargo_init.sh"
            message_on_fail: "Looks like `cargo run` is failing to execute. Maybe there's a bug in your code?"
            message_on_success: "Congrats! You've successfully initialized your Rust Project."
      - name: "Rust Tooling"
        slug: "1-2"
        duration: 3600
        tests:
          - name: "rustfmt"
            slug: "rustfmt"
            optional: true
            cmd: "./tests/1-2/rustfmt.sh"
            message_on_fail: "`rustfmt.toml` not found"
            message_on_success: "Great! Now you can use `rustfmt` to keep your code clean and easy to read."
  - name: "The Balances Pallet"
    slug: "2"
    lessons:
      - name: "Creating a Balances Pallet"
        slug: "2-1"
        duration: 3600
        tests:
          - name: "balances exists"
            slug: "balances-exists"
            optional: false
            cmd: "./tests/2-1/balances_exists.sh"
            message_on_fail: "We couldn't find a 'balances.rs' file in your project. Did you forget to create it?"
            message_on_success: "You've successfully created a 'balances.rs' file."

          - name: "balances pallet struct"
            slug: "balances-pallet-struct"
            optional: false
            cmd: "./tests/2-1/balances_wrapper_pallet_struct.sh"
            message_on_fail: "We couldn't find a 'Pallet' struct in your 'balances.rs' file. Maybe you forgot to change the visibility with using 'pub'?"
            message_on_success: "You've successfully created a 'Pallet' struct in your 'balances.rs' file."

          - name: "balances module import"
            slug: "balances-module-import"
            optional: false
            cmd: "./tests/2-1/balances_mod_import_check.sh"
            message_on_fail: "We couldn't find a 'balances' module import in your 'main.rs' file. Did you forget to import it?"
            message_on_success: "Awesome! You've successfully imported the 'balances' module in your 'main.rs' file."

      - name: "Adding State to Our Pallet"
        slug: "2-2"
        duration: 3600
        tests:
          - name: "initialize balances pallet"
            slug: "initialize-balances-pallet"
            optional: false
            cmd: "./tests/2-2/balances_pallet_field_type_check.sh"
            message_on_fail: "Looks like the initialize function 'new()' is either missing in your 'balances.rs' file or it's not implemented correctly for your balances pallet."
            message_on_success: "Great! Your balances pallet now has a state to keep track of balances."

      - name: "Interacting with Balances"
        slug: "2-3"
        duration: 3600
        tests:
          - name: "balances interactions"
            slug: "balances-interactions"
            optional: false
            cmd: "./tests/2-3/balances_interactions_wrapper.sh"
            message_on_fail: "Looks like the 'set_balance' and 'balance' functions are not implemented correctly in your balances pallet."
            message_on_success: "Awesome! You've successfully implemented the 'set_balance' and 'balance' functions in your balances pallet."

      - name: "Basic Balance Test"
        slug: "2-4"
        duration: 3600
        tests:
          - name: "basic balance test"
            slug: "basic-balance-test"
            optional: false
            cmd: "./tests/2-4/check_init_balances.sh"
            message_on_fail: "Looks like the basic balance test is failing. Did you implement the 'init_balances' test correctly?"
            message_on_success: "Great! You've successfully written the 'init_balances' test for your balances pallet."

      - name: "Enable Balance Transfers"
        slug: "2-5"
        duration: 3600
        tests:
          - name: "enable balance transfers"
            slug: "enable-balance-transfers"
            optional: false
            cmd: "./tests/2-5/balances_transfer_wrapper.sh"
            message_on_fail: "Looks like the 'transfer' function is not implemented correctly in your balances pallet."
            message_on_success: "Awesome! You've successfully implemented the 'transfer' function in your balances pallet."

          - name: "test transfer balance"
            slug: "test-transfer-balance"
            optional: false
            cmd: "./tests/2-5/check_transfer_balance.sh"
            message_on_fail: "Looks like the 'transfer_balance' test is either missing or failing. Did you implement it correctly?"
            message_on_success: "Great! You've successfully written the 'transfer_balance' test for your balances pallet."

  - name: "The System and Runtime"
    slug: "3"
    lessons:
      - name: "Introduce the System Pallet"
        slug: "3-1"
        duration: 3600
        tests:
          - name: "system exists"
            slug: "system-exists"
            optional: false
            cmd: "./tests/3-1/system_exists.sh"
            message_on_fail: "We couldn't find a 'system.rs' file in your project. Did you forget to create it?"
            message_on_success: "You've successfully created a 'system.rs' file."

          - name: "system module import"
            slug: "system-module-import"
            optional: false
            cmd: "./tests/3-1/system_mod_import_check.sh"
            message_on_fail: "We couldn't verify the 'system' module import in your 'main.rs' file. Maybe you imported it as public?"
            message_on_success: "Awesome! You've successfully imported the 'system' module in your 'main.rs' file."

          - name: "system implementation"
            slug: "system-implementation"
            optional: false
            cmd: "./tests/3-1/system_implementation_check.sh"
            message_on_fail: "Looks like the 'System' struct is not implemented correctly in your 'system.rs' file. Maybe try checking the fields and functions again?"
            message_on_success: "Great! You've successfully implemented the 'System' struct in your 'system.rs' file."

      - name: "Making Your System Functional"
        slug: "3-2"
        duration: 3600
        tests:
          - name: "system interactions"
            slug: "system-interactions"
            optional: false
            cmd: "./tests/3-2/system_interactions_wrapper.sh"
            message_on_fail: "Looks like the fields or methods are not implemented correctly in your system pallet."
            message_on_success: "Awesome! You've successfully implemented the 'system' pallet."

          - name: "check init system"
            slug: "check-init-system"
            optional: false
            cmd: "./tests/3-2/check_init_system.sh"
            message_on_fail: "Looks like the 'init_system' test is either missing or failing. Did you implement it correctly?"
            message_on_success: "Great! You've successfully written the 'init_system' test for your system pallet."

      - name: "Creating Our Runtime"
        slug: "3-3"
        duration: 3600
        tests:
          - name: "runtime check"
            slug: "runtime-check"
            optional: false
            cmd: "./tests/3-3/runtime_field_type_check.sh"
            message_on_fail: "Looks like the 'Runtime' struct is not implemented correctly in your 'main.rs' file. Maybe try checking the fields and functions again?"
            message_on_success: "Great! You've successfully implemented the 'Runtime' struct in your 'main.rs' file."

      - name: "Using Our Runtime"
        slug: "3-4"
        duration: 3600
        tests:
          - name: "runtime usage"
            slug: "runtime-usage"
            optional: false
            cmd: "./tests/3-4/runtime_usage.sh"
            message_on_fail: "Looks like the 'Runtime' struct is not being used correctly in your 'main.rs' file. Maybe try checking the fields and functions again?"
            message_on_success: "Great! You've successfully used the 'Runtime' struct in your 'main.rs' file."

      - name: "Derive Debug"
        slug: "3-5"
        duration: 3600
        tests:
          - name: "check debug derive"
            slug: "check-debug-derive"
            optional: false
            cmd: "./tests/3-5/check_debug_derive.sh"
            message_on_fail: "Looks like the 'Debug' trait is not derived correctly for your 'Runtime' struct. Did you forget to derive it for one of the fields?"
            message_on_success: "Great! You've successfully derived the 'Debug' trait for your 'Runtime' struct."

          - name: "check debug println"
            slug: "check-debug-println"
            optional: false
            cmd: "./tests/3-5/check_debug_println.sh"
            message_on_fail: "Looks like you're not printing the 'Runtime' struct correctly. Maybe try using the '{:#?}' format with 'println!'?"
            message_on_success: "Great! You've successfully printed the 'Runtime' struct using 'println!'."

  - name: "Generic and Configurable Types"
    slug: "4"
    lessons:
      - name: "Using Named Types"
        slug: "4-1"
        duration: 3600
        tests:
          - name: "balances named types"
            slug: "balances-named-types"
            optional: false
            cmd: "./tests/4-1/balances_named_types_check.sh"
            message_on_fail: "Looks like the named types are not implemented correctly in your balances pallet. Maybe try checking the field types and function signatures again?"
            message_on_success: "Great! You've successfully implemented the named types in your balances pallet."

          - name: "system named types"
            slug: "system-named-types"
            optional: false
            cmd: "./tests/4-1/system_named_types_check.sh"
            message_on_fail: "Looks like the named types are not implemented correctly in your system pallet. Maybe try checking the field types and function signatures again?"
            message_on_success: "Great! You've successfully implemented the named types in your system pallet."

      - name: "Make Balances Pallet Generic"
        slug: "4-3"
        duration: 3600
        tests:
          - name: "check generics in balances pallet"
            slug: "check-generics-in-balances-pallet"
            optional: false
            cmd: "./tests/4-3/check_generic_balances.sh"
            message_on_fail: "Please ensure that the `Pallet` struct in `balances.rs` is generic over AccountId and Balance, with the correct trait constraints."
            message_on_success: "Generics correctly implemented in Balances Pallet."

      - name: "Make System Pallet Generic"
        slug: "4-4"
        duration: 3600
        tests:
          - name: "check generics in system pallet"
            slug: "check-generics-in-system-pallet"
            optional: false
            cmd: "./tests/4-4/check_generic_system.sh"
            message_on_fail: "Please ensure the `System` pallet is correctly implemented as a generic over AccountId, BlockNumber, and Nonce, and is instantiated correctly in main.rs."
            message_on_success: "System Pallet correctly implemented and instantiated with generic types."

      - name: "Make System Configurable"
        slug: "4-5"
        duration: 3600
        tests:
          - name: "check for configurable system pallet"
            slug: "check-for-configurable-system-pallet"
            optional: false
            cmd: "./tests/4-5/check_system_config.sh"
            message_on_fail: "Please ensure the `System` pallet is correctly implemented as a configurable pallet."
            message_on_success: "System Pallet correctly implemented as a configurable pallet."

      - name: "Make Balances Configurable"
        slug: "4-6"
        duration: 3600
        tests:
          - name: "check for configurable balances pallet"
            slug: "check-for-configurable-balances-pallet"
            optional: false
            cmd: "./tests/4-6/check_balances_config.sh"
            message_on_fail: "Please ensure the `Balances` pallet is correctly implemented as a configurable pallet."
            message_on_success: "Balances Pallet correctly implemented as a configurable pallet."
      
      - name: "Tight Coupling"
        slug: "4-7"
        duration: 3600
        tests:
          - name: "check tight coupling"
            slug: "check-tight-coupling"
            optional: false
            cmd: "./tests/4-7/check_tight_coupling.sh"
            message_on_fail: "Please ensure the `Balances` pallet is correctly implemented with tight coupling to the `System` pallet."
            message_on_success: "Balances Pallet correctly implemented with tight coupling to the System Pallet."
      
  - name: "Executing Blocks and Dispatching Calls"
    slug: "5"
    lessons:
      - name: "Add Our Support Module"
        slug: "5-1"
        duration: 3600
        tests:
          - name: "support exists"
            slug: "support-exists"
            optional: false
            cmd: "./tests/5-1/support_exists.sh"
            message_on_fail: "Could not find the `support` module in your runtime. Please ensure it exists."
            message_on_success: "Great! You've successfully added the `support` module to your runtime."
        
          - name: "support implementation check"
            slug: "support-implementation-check"
            optional: false
            cmd: "./tests/5-1/support_implementation_check.sh"
            message_on_fail: "Looks like the `support` module is not implemented correctly in your runtime. Maybe try checking the fields and functions again?"
            message_on_success: "Great! You've successfully implemented the `support` module in your runtime."
      
          - name: "support module import"
            slug: "support-module-import"
            optional: false
            cmd: "./tests/5-1/support_mod_import_check.sh"
            message_on_fail: "Please ensure the `support` module is imported correctly in your `main.rs` file."
            message_on_success: "Support module imported correctly in `main.rs` file."
      
          - name: "check transfer fn return type"
            slug: "check-transfer-fn-return-type"
            optional: false
            cmd: "./tests/5-1/check_transfer_fn_return_type.sh"
            message_on_fail: "Please ensure the `transfer` function in the `support` module returns the correct type `DispatchResult`."
            message_on_success: "Transfer function in the `support` module returns the correct type `DispatchResult`."
      
      - name: "Create Your Block Type"
        slug: "5-2"
        duration: 3600
        tests:
          - name: "check type definitions"
            slug: "check-type-definitions"
            optional: false
            cmd: "./tests/5-2/check_type_definitions.sh"
            message_on_fail: "Please ensure you've defined all required types correctly in the types module. Check that Extrinsic uses AccountId and RuntimeCall, Header uses BlockNumber, and Block uses Header and Extrinsic."
            message_on_success: "Great! You've successfully defined all the required block types."

      - name: "Executing Blocks"
        slug: "5-3"
        duration: 3600
        tests:
          - name: "check execute block implementation"
            slug: "check-execute-block"
            optional: false
            cmd: "./tests/5-3/check_execute_block.sh"
            message_on_fail: "Please ensure your execute_block implementation includes block number increment, validation, proper extrinsic iteration with nonce updates, and error handling with block/extrinsic information."
            message_on_success: "Great! You've successfully implemented the execute_block function with proper block validation and extrinsic processing."

      - name: "Dispatching Calls"
        slug: "5-4"
        duration: 3600
        tests:
          - name: "check dispatch implementation"
            slug: "check-dispatch-implementation"
            optional: false
            cmd: "./tests/5-4/check_dispatch_implementation.sh"
            message_on_fail: "Please ensure your RuntimeCall enum and dispatch implementation are correct. Check that BalancesTransfer variant has the correct fields and that dispatch properly handles the transfer call with error propagation."
            message_on_success: "Great! You've successfully implemented the RuntimeCall enum and dispatch function."
      
      - name: "Using Execute Block"
        slug: "5-5"
        duration: 3600
        tests:
          - name: "check main function update"
            slug: "check-main-function-update"
            optional: false
            cmd: "./tests/5-5/check_main_function.sh"
            message_on_fail: "Please ensure you've replaced the old transaction code with proper block creation and execution. Check that you're creating a block with the correct header and extrinsics, and using execute_block with proper error handling."
            message_on_success: "Great! You've successfully updated the main function to use block creation and execution."
      
      - name: "Pallet Level Dispatch"
        slug: "5-6"
        duration: 3600
        tests:
          - name: "check pallet dispatch"
            slug: "check-pallet-dispatch"
            optional: false
            cmd: "./tests/5-6/check_pallet_dispatch.sh"
            message_on_fail: "Please ensure your Balances pallet implements dispatch correctly. Check that the Call enum is defined with Transfer variant and that dispatch properly handles the transfer call."
            message_on_success: "Great! You've successfully implemented pallet-level dispatch in the Balances pallet."
      
      - name: "Nested Dispatch"
        slug: "5-7"
        duration: 3600
        tests:
          - name: "check nested dispatch"
            slug: "check-nested-dispatch"
            optional: false
            cmd: "./tests/5-7/check_nested_dispatch.sh"
            message_on_fail: "Please ensure you've correctly implemented nested dispatch. Check that RuntimeCall uses the nested enum pattern and that dispatch properly routes calls to the balances pallet."
            message_on_success: "Great! You've successfully implemented nested dispatch in your runtime."

  - name: "The Proof of Existence Pallet"  # New section
    slug: "6"
    lessons:
      - name: "Proof of Existence Pallet"
        slug: "6-1"
        duration: 3600
        tests:
          - name: "check proof of existence implementation"
            slug: "check-poe-implementation"
            optional: false
            cmd: "./tests/6-1/check_poe_implementation.sh"
            message_on_fail: "Please ensure you've correctly implemented the Proof of Existence pallet. Check that the Config trait, Pallet struct, and storage field are defined correctly."
            message_on_success: "Great! You've successfully created the basic structure of the Proof of Existence pallet."
        
      - name: "Proof Of Existence Functions"
        slug: "6-2"
        duration: 3600
        tests:
          - name: "check poe functions"
            slug: "check-poe-functions"
            optional: false
            cmd: "./tests/6-2/check_poe_functions.sh"
            message_on_fail: "Please ensure you've correctly implemented all Proof of Existence pallet functions. Check that get_claim, create_claim, and revoke_claim are implemented with proper error handling."
            message_on_success: "Great! You've successfully implemented all the Proof of Existence pallet functions with proper error handling."
        
      - name: "Add Proof of Existence Dispatch"
        slug: "6-3"
        duration: 3600
        tests:
          - name: "check poe dispatch"
            slug: "check-poe-dispatch"
            optional: false
            cmd: "./tests/6-3/check_poe_dispatch.sh"
            message_on_fail: "Please ensure you've correctly implemented dispatch for the Proof of Existence pallet. Check that the Call enum variants are defined correctly and that dispatch properly routes calls to the appropriate functions."
            message_on_success: "Great! You've successfully implemented dispatch for the Proof of Existence pallet."
